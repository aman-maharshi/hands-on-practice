{"version":3,"sources":["TodoItem.js","App.js","index.js"],"names":["TodoItem","id","task","todoList","setTodoList","setUserInput","setItemToEdit","onClick","itemId","editingItemDetails","filter","item","handleEditTodo","className","App","useState","userInput","itemToEdit","onSubmit","e","preventDefault","editId","editIndex","indexOf","copyOfList","splice","newTodoItem","Date","getTime","console","log","value","onChange","target","type","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAwBeA,EAxBE,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,GAAIC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAW/D,OACI,+BACKJ,EAAM,IACP,wBAAQK,QAAS,kBATF,SAAAC,GACnB,IAAMC,EAAqBN,EAASO,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOO,KAAQ,GACvEF,EAAcG,GACdJ,EAAaI,EAAmBP,MAMLU,CAAeX,IAAKY,UAAU,UAArD,kBAGA,wBAAQN,QAAS,kBAhBAC,EAgBuBP,OAf5CG,EAAYD,EAASO,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOO,MAD3B,IAAAA,GAgB4BK,UAAU,YAAvD,mBCkCGC,EAhDH,WACR,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBX,EAAlB,KACA,EAAgCU,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiBC,EAAjB,KACA,EAAoCW,mBAAS,MAA7C,mBAAOE,EAAP,KAAmBX,EAAnB,KA6BA,OACI,sBAAKO,UAAU,YAAf,UACI,sDACA,uBAAMA,UAAU,OAAOK,SA9BN,SAAAC,GAErB,GADAA,EAAEC,iBACEJ,EACA,GAAIC,EAAY,CAEZ,IAAMI,EAASJ,EAAWhB,GACpBqB,EAAYnB,EAASoB,QAAQN,GAC7BO,EAAU,YAAOrB,GACvBqB,EAAWC,OAAOH,EAAW,EAAG,CAAErB,GAAIoB,EAAQnB,KAAMc,IACpDZ,EAAYoB,OACT,CAEH,IAAME,EAAc,CAChBzB,IAAI,IAAI0B,MAAOC,UACf1B,KAAMc,GAGVZ,EAAY,GAAD,mBAAKD,GAAL,CAAeuB,UAG9BG,QAAQC,IAAI,gBAGhBzB,EAAa,IACbC,EAAc,OAMV,UACI,uBAAOyB,MAAOf,EAAWgB,SAAU,SAAAb,GAAC,OAAId,EAAac,EAAEc,OAAOF,QAAQG,KAAK,OAAOrB,UAAU,eAC5F,wBAAQqB,KAAK,SAAb,SAAuBjB,EAAa,OAAS,WAEjD,oBAAIJ,UAAU,OAAd,SACKV,EAASgC,KAAI,SAAAxB,GACV,OAAO,cAAC,EAAD,CAAwBV,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,SAAUA,EAAUC,YAAaA,EAAaC,aAAcA,EAAcC,cAAeA,GAAhIK,EAAKV,aCvC/CmC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.9fc1e7db.chunk.js","sourcesContent":["const TodoItem = ({ id, task, todoList, setTodoList, setUserInput, setItemToEdit }) => {\n    const handleDeleteTodo = itemId => {\n        setTodoList(todoList.filter(item => item.id !== itemId))\n    }\n\n    const handleEditTodo = itemId => {\n        const editingItemDetails = todoList.filter(item => item.id === itemId)[0]\n        setItemToEdit(editingItemDetails)\n        setUserInput(editingItemDetails.task)\n    }\n\n    return (\n        <li>\n            {task}{\" \"}\n            <button onClick={() => handleEditTodo(id)} className=\"editBtn\">\n                Edit\n            </button>\n            <button onClick={() => handleDeleteTodo(id)} className=\"deleteBtn\">\n                X\n            </button>\n        </li>\n    )\n}\n\nexport default TodoItem\n","import { useState } from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nconst App = () => {\n    const [userInput, setUserInput] = useState(\"\")\n    const [todoList, setTodoList] = useState([])\n    const [itemToEdit, setItemToEdit] = useState(null)\n\n    const handleFormSubmit = e => {\n        e.preventDefault()\n        if (userInput) {\n            if (itemToEdit) {\n                // Edit Existing Item\n                const editId = itemToEdit.id\n                const editIndex = todoList.indexOf(itemToEdit)\n                const copyOfList = [...todoList]\n                copyOfList.splice(editIndex, 1, { id: editId, task: userInput })\n                setTodoList(copyOfList)\n            } else {\n                // Add New Item\n                const newTodoItem = {\n                    id: new Date().getTime(),\n                    task: userInput\n                }\n\n                setTodoList([...todoList, newTodoItem])\n            }\n        } else {\n            console.log(\"Enter a task\")\n        }\n\n        setUserInput(\"\")\n        setItemToEdit(null)\n    }\n\n    return (\n        <div className=\"container\">\n            <h3>Simple Todo in React</h3>\n            <form className=\"form\" onSubmit={handleFormSubmit}>\n                <input value={userInput} onChange={e => setUserInput(e.target.value)} type=\"text\" className=\"todo-input\" />\n                <button type=\"submit\">{itemToEdit ? \"Edit\" : \"Add\"}</button>\n            </form>\n            <ul className=\"list\">\n                {todoList.map(item => {\n                    return <TodoItem key={item.id} id={item.id} task={item.task} todoList={todoList} setTodoList={setTodoList} setUserInput={setUserInput} setItemToEdit={setItemToEdit} />\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}